<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/assets/**" location="/WEB-INF/views/assets/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="project.spring.ilchooL.controllers" />
	<context:component-scan base-package="project.spring.ilchooL.controllers.rest" />
	<!-- <context:component-scan base-package="project.spring.ilchooL.schedulers" /> -->
	
	<!-- 서비스 구현체가 배치될 패키지 정의하기 -->
	<context:component-scan base-package="project.spring.ilchooL.service.impl" />
	
	 <!-- 인터셉터 등록 -->
    <interceptors>
        <interceptor>
            <mapping path="/**" />
            <beans:bean id="appInterceptor" class="project.spring.ilchooL.interceptor.AppInterceptor" />
        </interceptor>
    </interceptors>
    
	<!-- 스케줄러 어노테이션 선언 -->
	<task:annotation-driven/>
	
	<!-- 스케줄러로 동작할 객체 생성 -->
	<beans:bean id="scheduleJob" class="project.spring.ilchooL.schedulers.CovidScheduler" />
	<beans:bean id="financeschedule" class="project.spring.ilchooL.schedulers.FinanceScheduler" />
	<beans:bean id="scheduleKeyword" class="project.spring.ilchooL.schedulers.KeywordScheduler" />
	<beans:bean id="weather_scheduleJob" class="project.spring.ilchooL.schedulers.WeatherScheduler" />
	<beans:bean id="dust_scheduleJob" class="project.spring.ilchooL.schedulers.DustScheduler" />
	
	
	<!-- 생성한 스케줄러 객체에 대한 작업 스케줄 지정 -->
	<task:scheduled-tasks>
		<!-- 매일 밤 11시 30분에 실행되는 스케줄러 -->
		<task:scheduled ref="weather_scheduleJob" method="collectWeather" cron="0 30 23 * * *"/>
		<task:scheduled ref="weather_scheduleJob" method="collectWeather" cron="0 30 11 * * *"/>
		<!-- <task:scheduled ref="weather_scheduleJob" method="collectWeather" cron="0/30 * * * * ?" /> -->
		<!-- 매일 11시에 실행되는 스케줄러 -->
		<task:scheduled ref="scheduleJob" method="collecCovid" cron="0 0 11 * * ?" />
		<!-- 1시간마다 실행되는 스케줄러 -->
		<!-- <task:scheduled ref="financeschedule" method="everyHours" cron="0 0 * * *  ? " />  -->
		<task:scheduled ref="financeschedule" method="finance" cron="0 0 * * *  ? " />
		
		<task:scheduled ref="scheduleKeyword" method="keyword" cron="0 0 * * *  ? " />
		
		<task:scheduled ref="dust_scheduleJob" method="collectDust" cron="0 0 0/1 * * ?" /> 
		<!-- <task:scheduled ref="dust_scheduleJob" method="collectDust" cron="0/30 * * * * ?" />  -->

		<!-- <task:scheduled ref="dust_scheduleJob" method="collectDust" cron="0/20 * * * * ?" /> -->
		<!-- 30초에 한번씩 실행되는 스케줄러 -->
		<!-- <task:scheduled ref="financeschedule" method="everyHours" cron="0/30 * * * * ?" /> -->
		<!-- 20초에 한번씩 실행되는 스케줄러 -->
		<!-- <task:scheduled ref="scheduleKeyword" method="keyword" cron="0/20 * * * * ?" /> -->
	</task:scheduled-tasks>
	
</beans:beans>
